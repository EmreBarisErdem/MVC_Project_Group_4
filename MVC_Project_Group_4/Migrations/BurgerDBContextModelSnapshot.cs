// <auto-generated />
using System;
using MVC_Project_Group_4.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MVC_Project_Group_4.Migrations
{
    [DbContext(typeof(BurgerDBContext))]
    partial class BurgerDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MVC_Project_Group_4.Models.Concrete.EkstraMalzeme", b =>
                {
                    b.Property<int>("EkstraMalzemeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EkstraMalzemeID"));

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Adet")
                        .HasColumnType("int");

                    b.Property<decimal>("Fiyat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("HamburgerID")
                        .HasColumnType("int");

                    b.Property<string>("PicturePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EkstraMalzemeID");

                    b.HasIndex("HamburgerID");

                    b.ToTable("EkstraMalzemeler");
                });

            modelBuilder.Entity("MVC_Project_Group_4.Models.Concrete.Hamburger", b =>
                {
                    b.Property<int>("HamburgerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HamburgerID"));

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Adet")
                        .HasColumnType("int");

                    b.Property<decimal>("Fiyat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PicturePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HamburgerID");

                    b.ToTable("Hamburgerler");
                });

            modelBuilder.Entity("MVC_Project_Group_4.Models.Concrete.Icecek", b =>
                {
                    b.Property<int>("IcecekID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IcecekID"));

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Adet")
                        .HasColumnType("int");

                    b.Property<decimal>("Fiyat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PicturePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IcecekID");

                    b.ToTable("Icecekler");
                });

            modelBuilder.Entity("MVC_Project_Group_4.Models.Concrete.Menu", b =>
                {
                    b.Property<int>("MenuID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MenuID"));

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Adet")
                        .HasColumnType("int");

                    b.Property<decimal>("Fiyat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PicturePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MenuID");

                    b.ToTable("Menuler");
                });

            modelBuilder.Entity("MVC_Project_Group_4.Models.Concrete.MenuDetay", b =>
                {
                    b.Property<int>("MenuDetayID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MenuDetayID"));

                    b.Property<int>("EkMalzemeID")
                        .HasColumnType("int");

                    b.Property<int?>("EkstraMalzemeID")
                        .HasColumnType("int");

                    b.Property<int>("HamburgerID")
                        .HasColumnType("int");

                    b.Property<int>("IcecekID")
                        .HasColumnType("int");

                    b.Property<int>("MenuID")
                        .HasColumnType("int");

                    b.Property<int>("TatlıID")
                        .HasColumnType("int");

                    b.HasKey("MenuDetayID");

                    b.HasIndex("EkstraMalzemeID");

                    b.HasIndex("HamburgerID");

                    b.HasIndex("IcecekID");

                    b.HasIndex("MenuID");

                    b.HasIndex("TatlıID");

                    b.ToTable("MenuDetaylari");
                });

            modelBuilder.Entity("MVC_Project_Group_4.Models.Concrete.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConcurrencyStamp = "2d271454-274f-4f9f-89a1-ab9ffe053612",
                            Name = "Yonetici",
                            NormalizedName = "YONETICI"
                        },
                        new
                        {
                            Id = 2,
                            ConcurrencyStamp = "2c7f2f8e-ffae-432a-8750-36e869248122",
                            Name = "Uye",
                            NormalizedName = "UYE"
                        });
                });

            modelBuilder.Entity("MVC_Project_Group_4.Models.Concrete.Siparis", b =>
                {
                    b.Property<int>("SiparisID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SiparisID"));

                    b.Property<int>("Adet")
                        .HasColumnType("int");

                    b.Property<int>("Boy")
                        .HasColumnType("int");

                    b.Property<string>("SiparisDetayAciklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UyeId")
                        .HasColumnType("int");

                    b.HasKey("SiparisID");

                    b.HasIndex("UyeId");

                    b.ToTable("Siparisler");
                });

            modelBuilder.Entity("MVC_Project_Group_4.Models.Concrete.SiparisDetay", b =>
                {
                    b.Property<int>("SiparisDetayID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SiparisDetayID"));

                    b.Property<int>("EkMalzemeID")
                        .HasColumnType("int");

                    b.Property<int?>("EkstraMalzemeID")
                        .HasColumnType("int");

                    b.Property<int>("HamburgerID")
                        .HasColumnType("int");

                    b.Property<int>("IcecekID")
                        .HasColumnType("int");

                    b.Property<int>("SiparisID")
                        .HasColumnType("int");

                    b.Property<int>("TatliID")
                        .HasColumnType("int");

                    b.HasKey("SiparisDetayID");

                    b.HasIndex("EkstraMalzemeID");

                    b.HasIndex("HamburgerID");

                    b.HasIndex("IcecekID");

                    b.HasIndex("SiparisID");

                    b.HasIndex("TatliID");

                    b.ToTable("SiparisDetaylari");
                });

            modelBuilder.Entity("MVC_Project_Group_4.Models.Concrete.SiparisMenu", b =>
                {
                    b.Property<int>("SiparisMenuID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SiparisMenuID"));

                    b.Property<int>("MenuID")
                        .HasColumnType("int");

                    b.Property<int>("SiparisID")
                        .HasColumnType("int");

                    b.HasKey("SiparisMenuID");

                    b.HasIndex("MenuID");

                    b.HasIndex("SiparisID");

                    b.ToTable("SiparisMenuleri");
                });

            modelBuilder.Entity("MVC_Project_Group_4.Models.Concrete.Tatli", b =>
                {
                    b.Property<int>("TatliID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TatliID"));

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Adet")
                        .HasColumnType("int");

                    b.Property<decimal>("Fiyat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PicturePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TatliID");

                    b.ToTable("Tatlilar");
                });

            modelBuilder.Entity("MVC_Project_Group_4.Models.Concrete.Uye", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Adres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessFailedCount = 0,
                            Adres = "Dunya",
                            ConcurrencyStamp = "3b0647d9-5620-4ac1-b1d1-71418abc65c0",
                            Email = "super@deneme.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "SUPER@DENEME.COM",
                            NormalizedUserName = "SUPER@DENEME.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAECnBdzPDQOjYgxZmihDCa8BBsXzeEfm0WERQ7qKwYE6GpcI8B2loDrO/3cn2uu3QGw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "db397fa8-e342-4ba3-9590-0746d92ed68e",
                            TwoFactorEnabled = false,
                            UserName = "super@deneme.com"
                        });
                });

            modelBuilder.Entity("MVC_Project_Group_4.Models.ViewModels.LoginVM", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("EMail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("LoginVM");
                });

            modelBuilder.Entity("MVC_Project_Group_4.Models.ViewModels.RegisterVM", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConfirmPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("RegisterVM");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            RoleId = 1
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("MVC_Project_Group_4.Models.Concrete.EkstraMalzeme", b =>
                {
                    b.HasOne("MVC_Project_Group_4.Models.Concrete.Hamburger", null)
                        .WithMany("MalzemeListesi")
                        .HasForeignKey("HamburgerID");
                });

            modelBuilder.Entity("MVC_Project_Group_4.Models.Concrete.MenuDetay", b =>
                {
                    b.HasOne("MVC_Project_Group_4.Models.Concrete.EkstraMalzeme", "EkstraMalzeme")
                        .WithMany("MenuDetay")
                        .HasForeignKey("EkstraMalzemeID");

                    b.HasOne("MVC_Project_Group_4.Models.Concrete.Hamburger", "Hamburger")
                        .WithMany("MenuDetay")
                        .HasForeignKey("HamburgerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MVC_Project_Group_4.Models.Concrete.Icecek", "Icecek")
                        .WithMany("MenuDetay")
                        .HasForeignKey("IcecekID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MVC_Project_Group_4.Models.Concrete.Menu", "Menu")
                        .WithMany("MenuDetay")
                        .HasForeignKey("MenuID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MVC_Project_Group_4.Models.Concrete.Tatli", "Tatlı")
                        .WithMany("MenuDetay")
                        .HasForeignKey("TatlıID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EkstraMalzeme");

                    b.Navigation("Hamburger");

                    b.Navigation("Icecek");

                    b.Navigation("Menu");

                    b.Navigation("Tatlı");
                });

            modelBuilder.Entity("MVC_Project_Group_4.Models.Concrete.Siparis", b =>
                {
                    b.HasOne("MVC_Project_Group_4.Models.Concrete.Uye", "Uye")
                        .WithMany("Siparisler")
                        .HasForeignKey("UyeId");

                    b.Navigation("Uye");
                });

            modelBuilder.Entity("MVC_Project_Group_4.Models.Concrete.SiparisDetay", b =>
                {
                    b.HasOne("MVC_Project_Group_4.Models.Concrete.EkstraMalzeme", "EkstraMalzeme")
                        .WithMany("SiparisDetay")
                        .HasForeignKey("EkstraMalzemeID");

                    b.HasOne("MVC_Project_Group_4.Models.Concrete.Hamburger", "Hamburger")
                        .WithMany("SiparisDetay")
                        .HasForeignKey("HamburgerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MVC_Project_Group_4.Models.Concrete.Icecek", "Icecek")
                        .WithMany("SiparisDetay")
                        .HasForeignKey("IcecekID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MVC_Project_Group_4.Models.Concrete.Siparis", "Siparis")
                        .WithMany()
                        .HasForeignKey("SiparisID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MVC_Project_Group_4.Models.Concrete.Tatli", "Tatli")
                        .WithMany("SiparisDetay")
                        .HasForeignKey("TatliID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EkstraMalzeme");

                    b.Navigation("Hamburger");

                    b.Navigation("Icecek");

                    b.Navigation("Siparis");

                    b.Navigation("Tatli");
                });

            modelBuilder.Entity("MVC_Project_Group_4.Models.Concrete.SiparisMenu", b =>
                {
                    b.HasOne("MVC_Project_Group_4.Models.Concrete.Menu", "Menu")
                        .WithMany("SiparisMenu")
                        .HasForeignKey("MenuID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MVC_Project_Group_4.Models.Concrete.Siparis", "Siparis")
                        .WithMany("SiparisMenu")
                        .HasForeignKey("SiparisID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Menu");

                    b.Navigation("Siparis");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("MVC_Project_Group_4.Models.Concrete.Rol", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("MVC_Project_Group_4.Models.Concrete.Uye", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("MVC_Project_Group_4.Models.Concrete.Uye", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("MVC_Project_Group_4.Models.Concrete.Rol", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MVC_Project_Group_4.Models.Concrete.Uye", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("MVC_Project_Group_4.Models.Concrete.Uye", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MVC_Project_Group_4.Models.Concrete.EkstraMalzeme", b =>
                {
                    b.Navigation("MenuDetay");

                    b.Navigation("SiparisDetay");
                });

            modelBuilder.Entity("MVC_Project_Group_4.Models.Concrete.Hamburger", b =>
                {
                    b.Navigation("MalzemeListesi");

                    b.Navigation("MenuDetay");

                    b.Navigation("SiparisDetay");
                });

            modelBuilder.Entity("MVC_Project_Group_4.Models.Concrete.Icecek", b =>
                {
                    b.Navigation("MenuDetay");

                    b.Navigation("SiparisDetay");
                });

            modelBuilder.Entity("MVC_Project_Group_4.Models.Concrete.Menu", b =>
                {
                    b.Navigation("MenuDetay");

                    b.Navigation("SiparisMenu");
                });

            modelBuilder.Entity("MVC_Project_Group_4.Models.Concrete.Siparis", b =>
                {
                    b.Navigation("SiparisMenu");
                });

            modelBuilder.Entity("MVC_Project_Group_4.Models.Concrete.Tatli", b =>
                {
                    b.Navigation("MenuDetay");

                    b.Navigation("SiparisDetay");
                });

            modelBuilder.Entity("MVC_Project_Group_4.Models.Concrete.Uye", b =>
                {
                    b.Navigation("Siparisler");
                });
#pragma warning restore 612, 618
        }
    }
}
